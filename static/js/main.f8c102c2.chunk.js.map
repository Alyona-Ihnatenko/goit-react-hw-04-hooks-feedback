{"version":3,"sources":["componetns/Statistics/Statistics.module.css","componetns/FeedbackOptions/FeedbackOptions.module.css","componetns/Section/Section.module.css","componetns/Notification/Notification.module.css","componetns/Feedback/Feedback.module.css","componetns/FeedbackOptions/FeedbackOptins.jsx","componetns/Section/Section.jsx","componetns/Statistics/Statistics.jsx","componetns/Notification/Notification.jsx","componetns/Feedback/Feedback.jsx","App.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","className","css","btnList","map","name","index","btnItem","button","type","onClick","Section","title","children","section","sectionTitle","Statistics","good","neutral","bad","total","positivePercentage","statList","statItem","text","description","Notification","message","Feedback","useState","setGood","setNeutral","setBad","variables","countTotalFeedback","Object","values","reduce","acc","currentValue","countPositiveFeedbackPercentage","Percentage","value","Math","round","key","keys","wrapper","e","target","prevState","totalFeedback","Number","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f8c102c2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__3VXk0\",\"statList\":\"Statistics_statList__3etHl\",\"statItem\":\"Statistics_statItem__lOmC0\",\"text\":\"Statistics_text__d2pEG\",\"description\":\"Statistics_description__2tCpT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnList\":\"FeedbackOptions_btnList__2XuuS\",\"btnItem\":\"FeedbackOptions_btnItem__3AJEs\",\"button\":\"FeedbackOptions_button__NWtcS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionTitle\":\"Section_sectionTitle__1FIfS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Notification_title__1Ul76\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Feedback_wrapper__2f14U\"};","import PropTypes from 'prop-types';\r\nimport css from './FeedbackOptions.module.css';\r\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return (\r\n    <ul className={css.btnList}>\r\n      {options.map((name, index) => (\r\n        <li className={css.btnItem} key={index}>\r\n          <button\r\n            className={css.button}\r\n            type=\"button\"\r\n            name={name}\r\n            onClick={onLeaveFeedback}\r\n          >\r\n            {name}\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\nexport default FeedbackOptions;\r\n","import PropTypes from 'prop-types';\r\nimport css from './Section.module.css';\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <section className={css.section}>\r\n      <h2 className={css.sectionTitle}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\nexport default Section;\r\n","import css from './Statistics.module.css';\r\n\r\nexport default function Statistics({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  total,\r\n  positivePercentage,\r\n}) {\r\n  return (\r\n    <ul className={css.statList}>\r\n      <li className={css.statItem}>\r\n        <span className={css.text}>Good:</span>\r\n        <span className={css.description}>{good}</span>\r\n      </li>\r\n\r\n      <li className={css.statItem}>\r\n        <span className={css.text}>Neutral:</span>\r\n        <span className={css.description}>{neutral}</span>\r\n      </li>\r\n\r\n      <li className={css.statItem}>\r\n        <span className={css.text}>Bad:</span>\r\n        <span className={css.description}>{bad}</span>\r\n      </li>\r\n\r\n      <li className={css.statItem}>\r\n        <span className={css.text}>Total:</span>\r\n        <span className={css.description}>{total}</span>\r\n      </li>\r\n\r\n      <li className={css.statItem}>\r\n        <span className={css.text}>Positiv feedback:</span>\r\n        <span className={css.description}>{positivePercentage} %</span>\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport css from './Notification.module.css';\r\nfunction Notification({ message }) {\r\n  return <p className={css.title}>{message}</p>;\r\n}\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\nexport default Notification;\r\n","import { useState } from 'react';\r\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptins';\r\nimport Section from '../Section/Section';\r\nimport Statistics from '../Statistics/Statistics';\r\nimport Notification from '../Notification/Notification';\r\nimport css from './Feedback.module.css';\r\n\r\nfunction Feedback() {\r\n  const [good, setGood] = useState(0);\r\n  const [neutral, setNeutral] = useState(0);\r\n  const [bad, setBad] = useState(0);\r\n\r\n  const handleClick = e => {\r\n    const option = e.target.name;\r\n    // eslint-disable-next-line default-case\r\n    switch (option) {\r\n      case 'good':\r\n        setGood(prevState => prevState + 1);\r\n\r\n        break;\r\n      case 'neutral':\r\n        setNeutral(prevState => prevState + 1);\r\n\r\n        break;\r\n      case 'bad':\r\n        setBad(prevState => prevState + 1);\r\n\r\n        break;\r\n    }\r\n  };\r\n\r\n  const variables = { good, neutral, bad };\r\n\r\n  const countTotalFeedback = () => {\r\n    return Object.values(variables).reduce(\r\n      (acc, currentValue) => acc + currentValue,\r\n      0,\r\n    );\r\n  };\r\n\r\n  const countPositiveFeedbackPercentage = () => {\r\n    const arr = Object.values(variables);\r\n    const Percentage = arr.map(value => {\r\n      return (value * 100) / countTotalFeedback();\r\n    });\r\n    return Math.round(Percentage[0]);\r\n  };\r\n\r\n  const key = Object.keys(variables);\r\n\r\n  return (\r\n    <div className={css.wrapper}>\r\n      <Section title=\"Please leave feedback\">\r\n        <FeedbackOptions onLeaveFeedback={handleClick} options={key} />\r\n      </Section>\r\n      <Section title=\"Statistics\">\r\n        {countTotalFeedback() === 0 ? (\r\n          <Notification message=\"No feedback given\" />\r\n        ) : (\r\n          <Statistics\r\n            good={good}\r\n            neutral={neutral}\r\n            bad={bad}\r\n            totalFeedback={countTotalFeedback()}\r\n            positivePercentage={\r\n              Number(countPositiveFeedbackPercentage())\r\n                ? countPositiveFeedbackPercentage()\r\n                : 0\r\n            }\r\n          />\r\n        )}\r\n      </Section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Feedback;\r\n","\nimport \"./App.css\";\nimport Feedback from \"./componetns/Feedback/Feedback\";\n\nfunction App() {\n  return (\n    <div>\n      <Feedback />\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}